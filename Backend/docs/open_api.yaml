openapi: 3.0.0
info:
  title: LearnerWiz API
  description: API for user registration, login, and language content management
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /user/register:
    post:
      summary: Register a new user
      tags:
        - User Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating successful registration
  /user/login:
    post:
      summary: Login an existing user
      tags:
        - User Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: JWT access token for authentication
  /language/content/{languageId}:
    get:
      summary: Get Language Content
      tags:
        - Language Management
      description: Endpoint to fetch language content for a given user and language ID.
      parameters:
        - in: path
          name: languageId
          required: true
          schema:
            type: integer
          description: ID of the language
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageContentResponse'
        '500':
          description: Internal server error
  /language/content/{languageId}/{wordId}:
    post:
      summary: Mark Word Completed
      tags:
        - Language Management
      description: Endpoint to mark a word as completed for a user.
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: Email address of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                languageId:
                  type: integer
                  description: The ID of the language.
                wordId:
                  type: integer
                  description: The ID of the word.
              required:
                - languageId
                - wordId
      responses:
        '201':
          description: Word Completed successfully
        '500':
          description: Internal server error
  /dashboard/{email}:
    get:
      summary: Get Dashboard Data
      tags:
        - Dashboard
      description: Endpoint to fetch dashboard data for a user based on email.
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
          description: Email address of the user
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageResponse'
          '500':
          description: Internal server error
components:
  schemas:
    RegisterUser:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          description: Username of the user
        email:
          type: string
          format: email
          description: Email address of the user
        password:
          type: string
          format: password
          description: Password of the user
    LoginUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Email address of the user
        password:
          type: string
          format: password
          description: Password of the user
    LanguageContentResponse:
      type: object
      properties:
        code:
          type: string
          description: The code of the language.
        languageId:
          type: integer
          description: The ID of the language.
        content:
          type: array
          items:
            type: object
            properties:
              wordId:
                type: integer
                description: The ID of the word.
              word:
                type: string
                description: The word in the language.
              translation:
                type: string
                description: The translation of the word.
              meaning:
                type: string
                description: The meaning of the word.
              progress:
                type: integer
                description: Progress of the word for the user (0 or 1).
    LanguageResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: language code
              languageId:
                type: integer
                description: The ID of the word.
              progress:
                type: integer
                description: Progress of the word for the user (0 or 1).
